basePath: /api
definitions:
    WeaponSql:
        description: ""
        properties:
            id:
                type: number
                format: double
                description: ""
            name:
                type: string
                description: ""
            damage:
                type: number
                format: double
                description: ""
            ammo:
                type: number
                format: double
                description: ""
        type: object
        required:
            - id
            - name
            - damage
            - ammo
    PlanetSql:
        description: ""
        properties:
            id:
                type: number
                format: double
                description: ""
            name:
                type: string
                description: ""
            shield:
                type: number
                format: double
                description: ""
        type: object
        required:
            - id
            - name
            - shield
    FireMethodOutDto:
        description: ""
        properties:
            weapon:
                $ref: '#/definitions/WeaponSql'
            planet:
                $ref: '#/definitions/PlanetSql'
            message:
                type: string
                description: ""
        type: object
        required:
            - weapon
            - planet
            - message
    ContextDamageInDto:
        description: ""
        properties: {}
        type: object
    DefendOutDto:
        description: ""
        properties:
            deathStar:
                $ref: '#/definitions/WeaponSql'
            alderaan:
                $ref: '#/definitions/PlanetSql'
        type: object
        required:
            - deathStar
            - alderaan
info:
    description: 'My Moleculer microservices project'
    title: moleculerjs-boilerplate
    version: 1.0.0
paths:
    /deathstar:
        post:
            operationId: WeaponServiceFireMethod
            produces:
                - 'application/json; charset=utf-8'
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/FireMethodOutDto'
            description: ""
            tags:
                - DeathStarServices
            consumes:
                - 'application/json; charset=utf-8'
            parameters:
                -
                    description: ""
                    in: body
                    name: ctx
                    required: true
                    schema:
                        $ref: '#/definitions/ContextDamageInDto'
    /planet:
        post:
            operationId: PlanetServiceDefendMethod
            produces:
                - 'application/json; charset=utf-8'
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/DefendOutDto'
            description: ""
            tags:
                - PlanetServices
            consumes:
                - 'application/json; charset=utf-8'
            parameters:
                -
                    description: ""
                    in: body
                    name: damage
                    required: true
                    schema:
                        type: number
                    format: double
swagger: '2.0'
securityDefinitions:
    api_key:
        type: apiKey
        name: access_token
        in: query
    tsoa_auth:
        type: oauth2
        authorizationUrl: 'http://swagger.io/api/oauth/dialog'
        flow: implicit
        scopes:
            'write:pets': 'modify things'
            'read:pets': 'read things'
host: 'localhost:3000'
